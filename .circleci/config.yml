version: 2.1

orbs:
  poetry: thomasborgen/python-poetry-orb@1.0.0

jobs:

  publish_job:
    executor:
      name: poetry/python
      tag: 3.8.2

    steps:
      - add_ssh_keys:
          fingerprints:
            - "ab:36:1c:33:54:04:44:a5:0a:eb:69:9b:84:c4:08:fa"

      - checkout

      - run:
          command: |
            COMMIT_SUBJECT=`git log -1 --pretty=%s.`
            SEMVER_INCREMENT=`echo ${COMMIT_SUBJECT} | sed -En 's/.*\[semver:(major|minor|patch|skip)\].*/\1/p'`
            echo "Commit subject: ${COMMIT_SUBJECT}"
            echo "export SEMVER_INCREMENT=\"$SEMVER_INCREMENT\""  >> $BASH_ENV
            if [ -z ${SEMVER_INCREMENT} ];then
              echo "Commit subject did not indicate which SemVer increment to make."
              echo "To publish package, you can ammend the commit or push another commit with [semver:FOO] in the subject where FOO is major, minor, patch."
              echo "Note: To indicate intention to skip promotion, include [semver:skip] in the commit subject instead."
              exit 1
            elif [ "$SEMVER_INCREMENT" == "skip" ];then
              echo "SEMVER in commit indicated to skip package release"
              exit 1
            fi
          name: Retrieve semver or stop job

      - run:
          command: export OLD_VERSION=`poetry version`
          name: store old version

      - poetry/version:
          args: ${SEMVER_INCREMENT}

      - run:
          command: export NEW_VERSION=`poetry version`
          name: store new version

      - run:
          command: env
          name: print env

      - run:
          name: Commit and push pyproject.toml
          command: |
            git add pyproject.toml
            git commit -m "Bumped ${SEMVER_INCREMENT} from ${OLD_VERSION} to ${NEW_VERSION} [skip ci]"
            git push


workflows:
  build_lint_test:
    jobs:
      - poetry/install:
          steps_before:
            - poetry/check
      - poetry/shell:
          name: run flake8 linting
          args: flake8
          requires:
            - poetry/install
      - poetry/shell:
          name: run pytest
          args: pytest
          steps_before:
            - run:
                name: Create google key file
                command: echo ${GCP_SERVICE_ACCOUNT_KEY} > key.json
          requires:
            - poetry/install
          filters:
            branches:
              ignore: master

  publish:
    jobs:
      - publish_job
