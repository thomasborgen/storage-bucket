{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Quickstart \u00b6 get the package pip install storage-bucket Download your keyfile and save it as key.json and point to it with env var: gcloud iam service-accounts keys create key.json --iam-account your_service_account@your_project.iam.gserviceaccount.com export GOOGLE_APPLICATION_CREDENTIALS='key.json' Run some code. See Usage .","title":"Home"},{"location":"#quickstart","text":"get the package pip install storage-bucket Download your keyfile and save it as key.json and point to it with env var: gcloud iam service-accounts keys create key.json --iam-account your_service_account@your_project.iam.gserviceaccount.com export GOOGLE_APPLICATION_CREDENTIALS='key.json' Run some code. See Usage .","title":"Quickstart"},{"location":"faq/","text":"FAQ \u00b6 How is it different from the google-cloud-storage library designed and maintained by Google? \u00b6 This library is built on top of google-cloud-storage . storage-bucket library allows to work in functional style and abstracts away common use-cases which bloats code with boileraplate. It enables smooth integration with returns library functional style and is powered by it. Missing a feature? \u00b6 Feel free to submit ticket with explanation of what is missing and possible use-case how you will use it. At the moment, storage-bucket doesn't support all scenarios exising in google-cloud-storage but we are actively developing to make 100% compatability.","title":"FAQ"},{"location":"faq/#faq","text":"","title":"FAQ"},{"location":"faq/#how-is-it-different-from-the-google-cloud-storage-library-designed-and-maintained-by-google","text":"This library is built on top of google-cloud-storage . storage-bucket library allows to work in functional style and abstracts away common use-cases which bloats code with boileraplate. It enables smooth integration with returns library functional style and is powered by it.","title":"How is it different from the google-cloud-storage library designed and maintained by Google?"},{"location":"faq/#missing-a-feature","text":"Feel free to submit ticket with explanation of what is missing and possible use-case how you will use it. At the moment, storage-bucket doesn't support all scenarios exising in google-cloud-storage but we are actively developing to make 100% compatability.","title":"Missing a feature?"},{"location":"usage/","text":"from storage_bucket.download_file import DownloadFile , download_file def use_data_for_something ( data ): print ( data ) # Normal way, this might throw exception... handle them yourself. my_data = download_file ( 'my_bucket' , 'my_file.txt' , ) use_data_for_something ( my_data ) # Functional way # this will _only_ call use_data_for_something when data is successfully downloaded. # so its completely safe. DownloadFile ()( 'my_bucket' , 'my_file.txt' , ) . map ( use_data_for_something , # send data to this function, ) File/blob operations \u00b6 Download \u00b6 from storage_bucket.download_file import DownloadFile , download_file DownloadFile ()( 'bucket' , 'filename' ) download_file ( 'bucket' , 'filename' ) Upload \u00b6 from storage_bucket.upload_file import UploadFile , upload_file UploadFile ()( b 'data' , 'bucket_name' , 'filename' ) upload_file ( b 'data' , 'bucket_name' , 'filename' ) List \u00b6 from storage_bucket.list_files import ListFiles , list_files ListFiles ()( 'bucket' ) list_files ( 'bucket' ) ListFiles ()( 'bucket' , 'foldername/' ) list_files ( 'bucket' , 'foldername/' ) Delete \u00b6 from storage_bucket.delete_file import DeleteFile , delete_file DeleteFile ()( 'bucketname' , 'filename' ) delete_file ( 'bucketname' , 'filename' ) Bucket operations \u00b6 Create Bucket \u00b6 from storage_bucket.create import CreateBucket , create_bucket CreateBucket ()( 'bucket-name' , 'EU' , 'STANDARD' ) create_bucket ( 'bucket-name' , 'EU' , 'STANDARD' ) Delete Bucket \u00b6 from storage_bucket.delete import DeleteBucket , delete_bucket DeleteBucket ()( 'bucket-name' ) delete_bucket ( 'bucket-name' ) List Buckets \u00b6 from storage_bucket.list import ListBuckets , list_buckets , list_bucket_names buckets = ListBuckets ()() bucket_names = list_bucket_names ( buckets . unwrap ()) buckets2 = list_buckets () bucket_names2 = list_bucket_names ( buckets2 )","title":"Usage"},{"location":"usage/#fileblob-operations","text":"","title":"File/blob operations"},{"location":"usage/#download","text":"from storage_bucket.download_file import DownloadFile , download_file DownloadFile ()( 'bucket' , 'filename' ) download_file ( 'bucket' , 'filename' )","title":"Download"},{"location":"usage/#upload","text":"from storage_bucket.upload_file import UploadFile , upload_file UploadFile ()( b 'data' , 'bucket_name' , 'filename' ) upload_file ( b 'data' , 'bucket_name' , 'filename' )","title":"Upload"},{"location":"usage/#list","text":"from storage_bucket.list_files import ListFiles , list_files ListFiles ()( 'bucket' ) list_files ( 'bucket' ) ListFiles ()( 'bucket' , 'foldername/' ) list_files ( 'bucket' , 'foldername/' )","title":"List"},{"location":"usage/#delete","text":"from storage_bucket.delete_file import DeleteFile , delete_file DeleteFile ()( 'bucketname' , 'filename' ) delete_file ( 'bucketname' , 'filename' )","title":"Delete"},{"location":"usage/#bucket-operations","text":"","title":"Bucket operations"},{"location":"usage/#create-bucket","text":"from storage_bucket.create import CreateBucket , create_bucket CreateBucket ()( 'bucket-name' , 'EU' , 'STANDARD' ) create_bucket ( 'bucket-name' , 'EU' , 'STANDARD' )","title":"Create Bucket"},{"location":"usage/#delete-bucket","text":"from storage_bucket.delete import DeleteBucket , delete_bucket DeleteBucket ()( 'bucket-name' ) delete_bucket ( 'bucket-name' )","title":"Delete Bucket"},{"location":"usage/#list-buckets","text":"from storage_bucket.list import ListBuckets , list_buckets , list_bucket_names buckets = ListBuckets ()() bucket_names = list_bucket_names ( buckets . unwrap ()) buckets2 = list_buckets () bucket_names2 = list_bucket_names ( buckets2 )","title":"List Buckets"},{"location":"contrib/contributing/","text":"How to contribute \u00b6 Submitting your code \u00b6 We use protected master branch, so the only way to push code is via pull-request To implement new issue, you need to create either bugfix/name-of-the-bug or feature/name-of-the-feature One of the commits should say Close #ISSUE_NUMBER, so pull-request will be associated with certain issue Branch should be rebased on top of latest master branch You can mark branch as [WIP] until it is finished and all checks are passed When all the above steps succeeded mention one of the mainters and ask for the review Other contribution \u00b6 If you find library useful or want to help us move forward, feel free to star and share the repo to your friends and colleagues. Share with us your experience, best practices and request new features, report bugs.","title":"Contribution"},{"location":"contrib/contributing/#how-to-contribute","text":"","title":"How to contribute"},{"location":"contrib/contributing/#submitting-your-code","text":"We use protected master branch, so the only way to push code is via pull-request To implement new issue, you need to create either bugfix/name-of-the-bug or feature/name-of-the-feature One of the commits should say Close #ISSUE_NUMBER, so pull-request will be associated with certain issue Branch should be rebased on top of latest master branch You can mark branch as [WIP] until it is finished and all checks are passed When all the above steps succeeded mention one of the mainters and ask for the review","title":"Submitting your code"},{"location":"contrib/contributing/#other-contribution","text":"If you find library useful or want to help us move forward, feel free to star and share the repo to your friends and colleagues. Share with us your experience, best practices and request new features, report bugs.","title":"Other contribution"},{"location":"contrib/dependencies/","text":"As a dependency manager we use poetry . To install correct versions of dependencies you would need to do installation via: poetry install","title":"Dependencies"},{"location":"contrib/gcp/","text":"You don't need your own gcp project to test this, since pushing to a branch will run tests for you, but this will make your feedback loop way much faster. To get everything set up you should have a gcp project, if you have a gmail account and didn't use your trial, you can get free quota for 300$ which is sufficient for all testing we're doing in storage-bucket . Get the gcloud cli - quickstart Make a service account or find the default SA for storage bucket Change directory to this project directory and create a key with: gcloud iam service-accounts keys create key.json --iam-account serviceaccount-name@project-id.iam.gserviceaccount.com replace serviceaccount-name and project-id with your own values. This will create the file key.json in your working dir. NOTE: If you decide to name file differently make sure you added its name into .gitignore , so it won't get pushed into the repo. And thats all you need to get up and running and start developing.","title":"GCP"},{"location":"contrib/tests/","text":"We use pytest , flake8 and mypy as a quality gate. We follow wemake_python_styleguide to enforce quality. To run all tests: poetry run pytest To run linting: poetry run flake8 . To check typing: poetry run mypy . All of these steps will be executed in CI pipeline, so we recommend to install poetry run pre-commit install , so all checks will run before commiting. You also can customize .pre-commit-config.yml","title":"Tests"}]}